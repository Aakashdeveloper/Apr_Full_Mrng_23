> https://github.com/ > Create account
> https://github.com/Aakashdeveloper > Follow
> https://code.visualstudio.com/ > Download & Install
> https://git-scm.com/downloads > Download & Install
> https://nodejs.org/en > Download & Install


JavaScript 2
> Es6 
> Let var const
> Hositing
> Closures
> Map,filter
> array
> object

React 5-6
> Different of component
> State & Props
> Lifecycle
> Api calling
> Rendering part
> Authentication
> Routing
> Optimisation
> Basic ReactNative
> Redux 
> Deployment
   * Jenkins
   * Github
   * Github action


NodeJs 4-5
> Express
> Crud (Create,Read,update,delete)
> Db connection
> Basic mongodb
> Basic Postgres
> Login Api
> Deployment

Cloud
> Basic Aws
> Lambda

NodejS
> Async Single Thread Non block I/0


add(() => {})
////////////////////////////////
JSON > JavaScript Object Notation
[
   {
      "name":"John",
      "city":"Venice"
   },
   {
      "name":"Neha",
      "city":"Paris",
      "lang":"Hindi"
   }
]

Express
> Is framwork of nodejs
Creating the routes and handle middleware

Package.json
> Entry point to application
> Contains meta data (name description,version)
> Scripts (start,test,build)
> Packages (used for app)

Npm 
> Node Package Manager
> Help to install packages
> It help to run the script

// Step to generate package.json
* NodeJs must be installed
> open the cmd/terminal
> go inside folder where you want to generate
> npm init
> Answer question 
> type yes

> npm init -y

// How to install packages
* NodeJs must be installed
> open the cmd/terminal
> go inside folder where you want to generate
> npm i packagename


Jenkins
Nginx
Docker 
Github action

oauth > Third party login (need to create app on the provider)
normal login > JWT (json web token)

parent > child (props)
child-paresnt (props with function)

Redux
View > Display
Action > Api calling
Reducer > State Mangement
Store > Save the state

/******GetAllUser*****/
(GET)> http://3.17.216.66:5000/api/auth/users

/******Register*****/
(POST)> http://3.17.216.66:5000/api/auth/register
(body) => {"name":"Aakash", "email":"aa@gmail.com","password":"12345678","phone":343432,role?":"user"}

/******Login*****/
(POST) => http://3.17.216.66:5000/api/auth/login
(body)  => {"email":"aa@gmail.com","password":"12345678"}
(response)=> {auth:true,token:'dgsdg'}

/******UserInfo*****/
(GET) => http://3.17.216.66:5000/api/auth/userinfo
(Header) => {'x-access-token':'token value from login'}
